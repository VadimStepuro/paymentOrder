apiVersion: v1
kind: ConfigMap
metadata:
  name: payment-order-app-env
  namespace: payment-order
data:
  database-url: payment-order-pgpool-service
  spring-datasource-url: jdbc:postgresql://payment-order-pgpool-service/postgres
  jdbc-driver: org.postgresql.Driver
  webclient-max-size: '16777216'
  webclient-base-url-customer: http://customer-app-service.customer:8082/api/v1
  client-timeout: '60s'
  spring-kafka-bootstrap-servers: kafka-service.kafka:9092
  kafka-topic-name-transfer-amount: transferAmount
  kafka-group-id: paymentOrderGroup
  kafka-back-off-interval: "1000"
  kafka-back-off-max-attempts: "9"
  redis-host: redis-service.redis
  redis-port: "6379"
  redis-database: "0"
  redis-timeout: "60000"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment-order-app
  namespace: payment-order
spec:
  replicas: 3
  selector:
    matchLabels:
      app: payment-order-app
  template:
    metadata:
      labels:
        app: payment-order-app
    spec:
      containers:
        - name: payment-order-app
          image: vadimstepuro/payment-order-app:1.2.8
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                configMapKeyRef:
                  name: payment-order-app-env
                  key: spring-datasource-url

            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: payment-order-db-secret
                  key: payment-order-db-root-username

            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: payment-order-db-secret
                  key: payment-order-db-root-password

            - name: JDBC_DRIVER
              valueFrom:
                configMapKeyRef:
                  name: payment-order-app-env
                  key: jdbc-driver

            - name: JDBC_URL
              valueFrom:
                configMapKeyRef:
                  name: payment-order-app-env
                  key: spring-datasource-url

            - name: JDBC_USERNAME
              valueFrom:
                secretKeyRef:
                  name: payment-order-db-secret
                  key: payment-order-db-root-username

            - name: JDBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: payment-order-db-secret
                  key: payment-order-db-root-password

            - name: WEBCLIENT_MAX_SIZE
              valueFrom:
                configMapKeyRef:
                  name: payment-order-app-env
                  key: webclient-max-size

            - name: WEBCLIENT_BASE_URL_CUSTOMER
              valueFrom:
                configMapKeyRef:
                  name: payment-order-app-env
                  key: webclient-base-url-customer

            - name: CLIENT_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  name: payment-order-app-env
                  key: client-timeout

            - name: SPRING_KAFKA_BOOTSTRAP-SERVERS
              valueFrom:
                configMapKeyRef:
                  name: payment-order-app-env
                  key: spring-kafka-bootstrap-servers

            - name: KAFKA_TOPIC-NAME_TRANSFER-AMOUNT
              valueFrom:
                configMapKeyRef:
                  name: payment-order-app-env
                  key: kafka-topic-name-transfer-amount

            - name: KAFKA_GROUP_ID
              valueFrom:
                configMapKeyRef:
                  name: payment-order-app-env
                  key: kafka-group-id

            - name: KAFKA_BACK-OFF_INTERVAL
              valueFrom:
                configMapKeyRef:
                  name: payment-order-app-env
                  key: kafka-back-off-interval

            - name: KAFKA_BACK-OFF_MAX-ATTEMPTS
              valueFrom:
                configMapKeyRef:
                  name: payment-order-app-env
                  key: kafka-back-off-max-attempts

            - name: SPRING_DATA_REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: payment-order-app-env
                  key: redis-host

            - name: SPRING_DATA_REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: payment-order-app-env
                  key: redis-port

            - name: SPRING_DATA_REDIS_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: payment-order-app-env
                  key: redis-database

            - name: SPRING_DATA_REDIS_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  name: payment-order-app-env
                  key: redis-timeout

            - name: SPRING_DATA_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: payment-order-app-secret
                  key: redis-password
---
apiVersion: v1
kind: Service
metadata:
  name: payment-order-app-service
  namespace: payment-order
spec:
  type: NodePort
  selector:
    app: payment-order-app
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8080
      nodePort: 30001